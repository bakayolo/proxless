apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: proxless
  name: proxless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxless
  strategy:
  template:
    metadata:
      labels:
        app: proxless
    spec:
      containers:
        - env:
            - name: LOG_LEVEL
              value: DEBUG
            - name: PORT
              value: "8080"
            - name: NAMESPACE_SCOPED
              value: "true"
            - name: PROXLESS_SERVICE
              value: proxless
            - name: PROXLESS_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: DEPLOYMENT_READINESS_TIMEOUT_SECONDS
              value: "30"
            - name: MAX_CONS_PER_HOST
              value: "10000"
            - name: SERVERLESS_TTL_SECONDS
              value: "30"
            - name: CLUSTER
              value: OPENSHIFT
          image: bappr/proxless:latest
          imagePullPolicy: Always
          livenessProbe:
            tcpSocket:
              port: 8080
          name: main
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8080
      serviceAccountName: proxless
---
apiVersion: v1
kind: Service
metadata:
  name: proxless
spec:
  ports:
    - name: "http"
      port: 8080
      protocol: TCP
  selector:
    app: proxless
  type: "ClusterIP"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxless
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: proxless
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: proxless
subjects:
  - kind: ServiceAccount
    name: proxless
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: proxless
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - watch
      - get
      - list
      - create
      - delete
  - apiGroups:
      - "apps.openshift.io"
    resources:
      - deploymentconfigs
    verbs:
      - get
      - update
      - list