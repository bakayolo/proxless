apiVersion: v1
kind: Namespace
metadata:
  name: proxless
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
  namespace: proxless
spec:
  selector:
    matchLabels:
      app: redis
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        tier: backend
    spec:
      containers:
        - name: master
          image: redis
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: proxless
  labels:
    app: redis
    tier: backend
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
    tier: backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: proxless
  name: proxless
  namespace: proxless
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxless
  strategy:
  template:
    metadata:
      labels:
        app: proxless
    spec:
      containers:
        - env:
            - name: LOG_LEVEL
              value: DEBUG
            - name: PORT
              value: "80"
            - name: NAMESPACE_SCOPED
              value: "false"
            - name: PROXLESS_SERVICE
              value: proxless
            - name: PROXLESS_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: DEPLOYMENT_READINESS_TIMEOUT_SECONDS
              value: "30"
            - name: MAX_CONS_PER_HOST
              value: "10000"
            - name: SERVERLESS_TTL_SECONDS
              value: "30"
            - name: REDIS_URL
              value: "redis:6379"
          image: bappr/proxless:latest
          imagePullPolicy: Always
          livenessProbe:
            tcpSocket:
              port: 80
          name: main
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 80
      serviceAccountName: proxless
---
apiVersion: v1
kind: Service
metadata:
  name: proxless
  namespace: proxless
spec:
  ports:
    - name: "http"
      port: 80
      protocol: TCP
  selector:
    app: proxless
  type: "ClusterIP"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxless
  namespace: proxless
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxless
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxless
subjects:
  - kind: ServiceAccount
    name: proxless
    namespace: proxless
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxless
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - watch
      - get
      - list
      - create
      - delete
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - get
      - update
      - list