apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "proxless.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "proxless.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "proxless.fullname" . }}
    spec:
      serviceAccountName: {{ template "proxless.fullname" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      containers:
      - name: main
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        env:
        - name: CLUSTER
          value: "{{ .Values.cluster }}"
        - name: LOG_LEVEL
          value: "{{ .Values.logLevel }}"
        - name: PORT
          value: "{{ .Values.port }}"
        - name: NAMESPACE_SCOPED
          value: "{{ .Values.namespaceScoped }}"
        - name: PROXLESS_SERVICE
          value: {{ template "proxless.fullname" . }}
        - name: PROXLESS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- range $key, $val := .Values.env }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        ports:
        - containerPort: {{ .Values.port }}
          name: "http"
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ .Values.port }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.port }}